name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install -r dashboard/requirements.txt
          pip install pytest pytest-cov

      - name: Run tests with coverage
        run: |
          python -m pytest test/ --cov=backend --cov-report=xml --cov-report=term-missing --maxfail=1 --disable-warnings

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend Docker image
        run: |
          docker build -t pii-backend ./backend

      - name: Build dashboard Docker image
        run: |
          docker build -t pii-dashboard ./dashboard

      - name: Test Docker containers
        run: |
          # Start backend container in background
          docker run -d --name test-backend -p 8000:8000 pii-backend
          sleep 10
          # Quick health check
          curl -f http://localhost:8000/logs || exit 1
          docker stop test-backend
          docker rm test-backend